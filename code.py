import json
import os
import re
from telethon import events
from ABH import ABH  # โ ุงุณุชูุฑุงุฏ ุงูููุงู ูุจุงุดุฑุฉ ุจุงุณู ABH

def fix_common_json_errors(text: str) -> str:
    """
    ุฅุตูุงุญ ุงูุฃุฎุทุงุก ุงูุดุงุฆุนุฉ ูู ูููุงุช JSON ุงููุจูุฑุฉ:
    - ุฅุฒุงูุฉ ุงูููุงุตู ุงูุฒุงุฆุฏุฉ
    - ุฅุบูุงู ุนูุงูุงุช ุงูุงูุชุจุงุณ
    - ุฅุบูุงู ุงูุฃููุงุณ ุงููุงูุตุฉ
    """
    text = text.strip()

    # ุฅุฒุงูุฉ ุงูููุงุตู ุงูุฒุงุฆุฏุฉ ูู ููุงูุฉ ุงูููุงุฆู ุฃู ุงูููุงููุณ
    text = re.sub(r',\s*([\]}])', r'\1', text)

    # ุฅุบูุงู ุนูุงูุงุช ุงูุงูุชุจุงุณ ุฅุฐุง ูุงูุช ุบูุฑ ูุชูุงุฒูุฉ
    if text.count('"') % 2 != 0:
        text += '"'

    # ุฅุบูุงู ุงูููุณ ุฃู ุงูููุณ ุงููุฑุจุน ุงููุงูุต
    if text.startswith('[') and not text.endswith(']'):
        text += ']'
    elif text.startswith('{') and not text.endswith('}'):
        text += '}'

    return text

@ABH.on(events.NewMessage(pattern=r'^ุชูุธูู$'))
async def clean_json_handler(event):
    if not event.is_reply:
        await event.reply("โ ูุฑุฌู ุงูุฑุฏ ุนูู ููู JSON ุงููุฑุงุฏ ุชูุธููู.")
        return

    reply_msg = await event.get_reply_message()

    if not reply_msg.media:
        await event.reply("โ ุงูุฑุณุงูุฉ ุงููุฑุฏูุฏ ุนูููุง ูุง ุชุญุชูู ุนูู ููู.")
        return

    # ุชูุฒูู ุงูููู ุจููุณ ุงุณูู ุงูุฃุตูู
    file_path = await reply_msg.download_media()
    original_name = os.path.basename(file_path)

    # ูุฑุงุกุฉ ุงููุต ุงูุฃุตูู ููููู
    with open(file_path, "r", encoding="utf-8") as f:
        original_text = f.read()

    fixed_text = original_text
    error_fixed = False

    # ูุญุงููุฉ ุงูุชุญููู ุงูุนุงุฏู
    try:
        json.loads(original_text)
    except json.JSONDecodeError:
        # ุฅุตูุงุญ ุงูุฃุฎุทุงุก ุงูุดุงุฆุนุฉ
        fixed_text = fix_common_json_errors(original_text)
        try:
            json.loads(fixed_text)
            error_fixed = True
        except json.JSONDecodeError:
            await event.reply("โ ูู ูุชููู ุงูุจูุช ูู ุฅุตูุงุญ ุงูููู. ุงูุฎุทุฃ ูุจูุฑ ุฃู ุบูุฑ ููุงุณู.")
            os.remove(file_path)
            return

    # ุญูุธ ุงูููู ุงููุตุญุญ ุจููุณ ุงูุงุณู ุงูุฃุตูู
    with open(original_name, "w", encoding="utf-8") as f:
        f.write(fixed_text)

    # ุฅุฑุณุงู ุงูููู ุฅููู ุจููุณ ุงูุงุณู
    caption = "โ ุชู ุชูุธูู ุงูููู ุจูุฌุงุญ."
    if error_fixed:
        caption += "\n๐งฐ ุชู ุฅุตูุงุญ ุจุนุถ ุงูุฃุฎุทุงุก ุงูุจุณูุทุฉ (ูุซู ุงูุชุจุงุณ ุฃู ููุณ ูุงูุต)."

    await event.reply(file=original_name, message=caption)

    # ุญุฐู ุงููููุงุช ุงููุคูุชุฉ ุจุนุฏ ุงูุฅุฑุณุงู
    os.remove(file_path)
    os.remove(original_name)

# ุชุดุบูู ุงูููุงู
ABH.start()
ABH.run_until_disconnected()
