from telethon import TelegramClient, events
import os

# ุฅุนุฏุงุฏ ุจูุงูุงุช ุงูุงุชุตุงู
api_id = os.getenv('API_ID')
api_hash = os.getenv('API_HASH')
bot_token = os.getenv('BOT_TOKEN')

# ุงูุชุญูู ูู ูุฌูุฏ API_ID ู API_HASH ู BOT_TOKEN
if not api_id or not api_hash or not bot_token:
    raise ValueError("ููููุฏ ูุงุญุฏ ุฃู ุฃูุซุฑ ูู ุงููุชุบูุฑุงุช ุงูุจูุฆูุฉ: API_ID, API_HASH, BOT_TOKEN")

# ุชุญููู API_ID ุฅูู ุนุฏุฏ ุตุญูุญ
api_id = int(api_id)

# ุฅูุดุงุก ุฌูุณุฉ TelegramClient
ABH = TelegramClient('c', api_id, api_hash).start(bot_token=bot_token)

# ูุงุฆูุฉ ูููุณุชุฎุฏููู ุงููุณููุญ ููู ุจุงูุชุนุฏููุงุช
approved_users = set()

# ุฃูุฑ "ุณูุงุญ" ูุฅุถุงูุฉ ุงููุณุชุฎุฏู ุฅูู ูุงุฆูุฉ ุงููุณููุญ ููู ุจุงูุชุนุฏููุงุช
@ABH.on(events.NewMessage(pattern='ุณูุงุญ'))
async def approve_user(event):
    if event.is_reply:  # ุฅุฐุง ูุงูุช ุงูุฑุณุงูุฉ ุฑุฏูุง
        reply_message = await event.get_reply_message()
        user_id = reply_message.sender_id  # ุงุณุชุฎุฑุงุฌ ูุนุฑู ุงููุณุชุฎุฏู ูู ุงูุฑุณุงูุฉ ุงูุชู ุชู ุงูุฑุฏ ุนูููุง
        
        # ุฅุถุงูุฉ ุงููุณุชุฎุฏู ุฅูู ูุงุฆูุฉ ุงููุณููุญ ููู
        approved_users.add(user_id)
        await event.reply(f"โ ุชู ุงูุณูุงุญ ูููุณุชุฎุฏู {user_id} ุจุงูุชุนุฏููุงุช.")
    else:
        await event.reply("โ ูุฑุฌู ุงูุฑุฏ ุนูู ุฑุณุงูุฉ ุงููุณุชุฎุฏู ุงูุฐู ุชุฑูุฏ ุงูุณูุงุญ ูู ุจุงูุชุนุฏููุงุช.")

# ุฃูุฑ "ุฅูุบุงุก ุณูุงุญ" ูุฅุฒุงูุฉ ุงููุณุชุฎุฏู ูู ูุงุฆูุฉ ุงููุณููุญ ููู ุจุงูุชุนุฏููุงุช
@ABH.on(events.NewMessage(pattern='ุฅูุบุงุก ุณูุงุญ'))
async def disapprove_user(event):
    if event.is_reply:  # ุฅุฐุง ูุงูุช ุงูุฑุณุงูุฉ ุฑุฏูุง
        reply_message = await event.get_reply_message()
        user_id = reply_message.sender_id  # ุงุณุชุฎุฑุงุฌ ูุนุฑู ุงููุณุชุฎุฏู ูู ุงูุฑุณุงูุฉ ุงูุชู ุชู ุงูุฑุฏ ุนูููุง
        
        # ุฅุฒุงูุฉ ุงููุณุชุฎุฏู ูู ูุงุฆูุฉ ุงููุณููุญ ููู
        if user_id in approved_users:
            approved_users.remove(user_id)
            await event.reply(f"โ ุชู ุฅูุบุงุก ุงูุณูุงุญ ูููุณุชุฎุฏู {user_id} ุจุงูุชุนุฏููุงุช.")
        else:
            await event.reply("โ ูุฐุง ุงููุณุชุฎุฏู ููุณ ูุณููุญูุง ูู ุจุงูุชุนุฏููุงุช.")
    else:
        await event.reply("โ ูุฑุฌู ุงูุฑุฏ ุนูู ุฑุณุงูุฉ ุงููุณุชุฎุฏู ุงูุฐู ุชุฑูุฏ ุฅูุบุงุก ุงูุณูุงุญ ูู ุจุงูุชุนุฏููุงุช.")

# ุฃูุฑ ูุนุฑุถ ูุงุฆูุฉ ุงููุณููุญ ููู
@ABH.on(events.NewMessage(pattern='ูุงุฆูุฉ ุงููุณููุญ ููู'))
async def list_approved_users(event):
    if approved_users:
        approved_list = "\n".join([str(user_id) for user_id in approved_users])
        await event.reply(f"๐ ูุงุฆูุฉ ุงููุณุชุฎุฏููู ุงููุณููุญ ููู ุจุงูุชุนุฏููุงุช:\n{approved_list}")
    else:
        await event.reply("โ ูุง ููุฌุฏ ุฃู ูุณุชุฎุฏููู ูุณููุญ ููู ุจุงูุชุนุฏููุงุช ุญุงููุงู.")

# ูุนุงูุฌุฉ ุงูุฑุณุงุฆู ุงููุนุฏูุฉ
@ABH.on(events.MessageEdited)
async def echo(event):
    user_id = event.sender_id
    if user_id in approved_users:  # ุงูุชุญูู ููุง ุฅุฐุง ูุงู ุงููุณุชุฎุฏู ูุณููุญูุง ูู ุจุงูุชุนุฏูู
        return  # ุงูุณูุงุญ ุจุงูุชุนุฏูู ุจุฏูู ุฃู ุฑุฏ
    elif event.message.media:  # ุฅุฐุง ูุงู ุงููุณุชุฎุฏู ุบูุฑ ูุณููุญ ููุงู ููุงู ูุณุงุฆุท
        await event.reply("ูุง ููููู ุณุงูููู")
    else:
        return  # ูุง ุชูุนู ุดูุฆูุง ุฅุฐุง ูู ุชูู ููุงู ูุณุงุฆุท

# ุชุดุบูู ุงูุนููู
ABH.run_until_disconnected()
